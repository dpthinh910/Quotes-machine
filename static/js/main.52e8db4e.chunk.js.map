{"version":3,"sources":["components/Button.js","App.js","reportWebVitals.js","index.js"],"names":["Button","quotes","setRandomIndex","idName","className","onClick","e","preventDefault","random","length","url","App","useState","setQuotes","randomIndex","color","setColor","useEffect","a","fetch","response","json","responseData","console","log","message","getData","selectQuoteIndex","colors","Math","floor","bodyColor","document","body","style","changeColor","Number","isInteger","selectedQuote","quote","author","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"qOAoBeA,G,KAfA,SAAC,GAA6B,IAA5BC,EAA2B,EAA3BA,OAAOC,EAAoB,EAApBA,eAOtB,OACE,qBAAKC,OAAO,YAAZ,SACE,wBAAQC,UAAU,SAASC,QAR/B,SAAsBC,GACpBA,EAAEC,iBACFL,GAAe,WACb,OAAOM,iBAAO,EAAEP,EAAOQ,OAAQ,OAK/B,2BCVCC,EAAM,yIAuFEC,MArFf,WAAgB,IAAD,EACeC,mBAAS,IADxB,mBACNX,EADM,KACEY,EADF,OAEyBD,qBAFzB,mBAENE,EAFM,KAEOZ,EAFP,OAGaU,mBAAS,WAHtB,mBAGNG,EAHM,KAGCC,EAHD,KAIbC,qBAAU,WAAM,4CACd,8BAAAC,EAAA,+EAEyBC,MAAMT,GAF/B,cAEQU,EAFR,gBAG6BA,EAASC,OAHtC,OAGQC,EAHR,OAIET,EAAUS,EAAarB,QAJzB,kDAOEsB,QAAQC,IAAI,gBAAiB,KAAMC,SAPrC,2DADc,uBAAC,WAAD,wBAWdC,GACAxB,EAAeyB,KACf,IACFV,qBAAU,WAoCRM,QAAQC,IAAIT,GAnCZ,WACE,IAAMa,EAAS,CACb,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,WAEIb,EAAQc,KAAKC,MAAMD,KAAKrB,SAAWoB,EAAOnB,QAC1CsB,EAAYC,SAASC,KAC3BjB,GAAS,WACP,OACEe,EAAUG,MAAV,4BAAwCN,EAAOb,OAKrDoB,KACA,CAACrB,IACH,IAQMa,EAAmB,WACvB,OAAI1B,EAAOQ,OAIFD,iBAAO,EAAGP,EAAOQ,OAAQ,QAHhC,GAMF,OACE,sBAAKL,UAAU,MAAf,UACE,sBAAKA,UAAU,YAAf,UAlBgB,WACpB,GAAKH,EAAOQ,QAAY2B,OAAOC,UAAUvB,GAIzC,OAAOb,EAAOa,GAcTwB,GAAa,WAASrC,EAAOa,GAAayB,MAA7B,eAAyCtC,EAAOa,GAAa0B,QAAW,GACtF,cAAC,EAAD,CAAQpC,UAAU,SAASF,eAAgBA,EAAgBD,OAAQA,EAAQc,MAAOA,EAAOC,SAAUA,OAErG,qBAAKZ,UAAU,SAAf,4BCzESqC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFpB,SAASqB,eAAe,SAG1BZ,K","file":"static/js/main.52e8db4e.chunk.js","sourcesContent":["import { random, set } from 'lodash';\r\nimport React from 'react';\r\nimport '../App.css';\r\n\r\n\r\nconst Button = ({quotes,setRandomIndex}) => {\r\n  function eventHandler(e) {\r\n    e.preventDefault();\r\n    setRandomIndex(() => {\r\n      return random(0,quotes.length -1);\r\n    })\r\n  }\r\n  return (\r\n    <div idName=\"quote-box\">\r\n      <button className=\"button\" onClick={eventHandler}>New Quote</button>\r\n    </div>\r\n  );\r\n\r\n}\r\n\r\nexport default Button;","import React, {useState,useEffect} from 'react';\nimport {random} from 'lodash';\nimport './App.css';\nimport Button from './components/Button';\n const url = 'https://gist.githubusercontent.com/camperbot/5a022b72e96c4c9585c32bf6a75f62d9/raw/e3c6895ce42069f0ee7e991229064f167fe8ccdc/quotes.json';\n\nfunction App() {\n  const [quotes, setQuotes] = useState([]);\n  const [randomIndex, setRandomIndex] = useState();\n  const [color, setColor] = useState('#0c1446');\n  useEffect(() => {\n    async function getData(){\n      try {\n      const response = await fetch(url);\n      const responseData = await response.json();\n      setQuotes(responseData.quotes);\n    }\n   catch(error) {\n      console.log('Error found: ', error.message);\n  }\n    };\n    getData();\n    setRandomIndex(selectQuoteIndex);\n  },[]);\n  useEffect(() => {\n    function changeColor() {\n      const colors = [\n        \"#023e8a\",\n        '#16a085',\n        '#27ae60',\n        '#2c3e50',\n        '#f39c12',\n        '#e74c3c',\n        '#9b59b6',\n        '#FB6964',\n        '#342224',\n        '#472E32',\n        '#BDBB99',\n        '#77B1A9',\n        '#73A857',\n        '#00b4d8',\n        '#457b9d',\n        '#8d99ae',\n        '#ffd166',\n        '#e63946',\n        '#ffadad',\n        '#4ea8de',\n        '#dee2ff',\n        '#5d2e46',\n        '#ade8f4',\n        '#80b918'\n      ];\n      const color = Math.floor(Math.random() * colors.length);\n      const bodyColor = document.body;\n      setColor(() => {\n        return (\n          bodyColor.style =  `background-color: ${colors[color]}`\n        );\n      })\n    };\n    console.log(color)\n    changeColor();\n  },[randomIndex])\n  const selectedQuote = () => {\n    if((!quotes.length) || !Number.isInteger(randomIndex))\n    {\n      return undefined;\n    }\n    return quotes[randomIndex];\n  }\n\n  const selectQuoteIndex = () => {\n    if(!quotes.length){\n      return undefined;\n    }\n    else{\n      return random(0, quotes.length -1);\n    }\n  }\n    return (\n      <div className=\"App\">\n        <div className=\"quote-box\">\n        {selectedQuote() ? `\"${quotes[randomIndex].quote}\" - ${quotes[randomIndex].author}` : ''}\n        <Button className=\"button\" setRandomIndex={setRandomIndex} quotes={quotes} color={color} setColor={setColor} />\n      </div>\n      <div className=\"footer\">by dpthinh</div>\n      </div>\n    );\n  }\n  \n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nreportWebVitals();\n"],"sourceRoot":""}